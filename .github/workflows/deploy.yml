name: Deploy Backend to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "🚀 Starting BACKEND deployment..."
            
            # Переходим в корневую папку проекта
            cd curator-project
            
            # Останавливаем только backend контейнер
            docker-compose stop backend || true
            docker-compose rm -f backend || true
            
            # Обновляем код backend репозитория 
            echo "Updating backend code..."
            cd curator-project-backend/lms-curator-server
            git pull origin main
            cd ../..
            
            # Обновляем .env.backend файл
            echo "Updating environment variables..."
            cat > .env.backend << EOF
            NODE_ENV=production
            PORT=3000
            TZ=Europe/Moscow
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_EXPIRATION=7d
            FRONTEND_URL=http://localhost:80
            CORS_ORIGIN=http://localhost:80
            LOG_LEVEL=info
            EOF
            
            # Устанавливаем правильные права
            chmod 600 .env.backend
            
            echo "Removing old container if exists..."
            docker stop curator-backend || true
            docker rm curator-backend || true
            
            # Пересобираем и запускаем только backend
            echo "Building and starting backend..."
            docker-compose up -d --build backend
            
            # Ждем запуска и проверяем здоровье
            sleep 15
            echo "Health check:"
            curl -f http://localhost:3000/api/health && echo "✅ Backend health: OK" || echo "❌ Backend health: FAILED"
            
            echo "🎉 BACKEND deployment completed!"